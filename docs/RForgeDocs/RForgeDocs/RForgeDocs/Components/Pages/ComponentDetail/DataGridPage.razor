@page "/data-grid/details"

<ComponentDetail Title="Data Grid"
                 PlaygroundUrl="/data-grid/playground"
                 SubTitle="Paginated table support">

    <RepoLinks>
        @ComponentDetail.SideLink(("RfNotificationManager.razor", TagInfo.Razor, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfNotificationManager.razor"))
        @ComponentDetail.SideLink(("RfNotificationManager.razor.cs", TagInfo.Backend, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfNotificationManager.razor.cs"))
        @ComponentDetail.SpacerLink()
        @ComponentDetail.SideLink(("INotificationManager.cs", TagInfo.Library, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/Services/INotificationManager.cs"))
        @ComponentDetail.SideLink(("INotificationManagerBackend.cs", TagInfo.Library, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForge.Abstractions/Notifications/INotificationManagerBackend.cs"))
        @ComponentDetail.SpacerLink()
        @ComponentDetail.SideLink(("NotificationOptions.cs", TagInfo.Library, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForge.Abstractions/Notifications/NotificationOptions.cs"))
        @ComponentDetail.SideLink(("RfNotificationColor.cs", TagInfo.Enum, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForge.Abstractions/Notifications/RfNotificationColor.cs"))
        @ComponentDetail.SideLink(("RfNotificationSeverity.cs", TagInfo.Enum, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForge.Abstractions/Notifications/RfNotificationSeverity.cs"))
        @ComponentDetail.SideLink(("RfNotificationPosition.cs", TagInfo.Enum, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForge.Abstractions/Notifications/RfNotificationPosition.cs"))
        @ComponentDetail.SpacerLink()
        @ComponentDetail.SideLink(("RfNotificationManagerNotification.razor", TagInfo.Razor, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfNotificationManagerNotification.razor"))
        @ComponentDetail.SideLink(("RfNotificationManagerNotification.razor.cs", TagInfo.Backend, "https://github.com/Rumhyek/RForge/blob/main/src/RForge/RForgeBlazor/RfNotificationManagerNotification.razor.cs"))
    </RepoLinks>

    <Purpose>
        <div class="content">

            <p>
                <code>RfDataGrid</code> adds support for paginated tables that may include filters.
                This component does not manage filters nor does it process the data but instead requires
                the developer to hook into a series of events to update the table when needed.
            </p>

            <h4>When to Use</h4>
            <p>
                When there is a large amount of tabular data that needs filtering, sorting, and pagination support.
            </p>

        </div>
    </Purpose>

    <Setup>
        <BasicSetupDetails />
    </Setup>


    <BasicUsage>

        <div class="content">

            <p>
                Unlike most Data grids, To use <code>RfDataGrid</code> the columns are broken into three seperate render fragments: <code>Headers</code>, <code>Cells</code>, and <code>Filters</code>.
                Each render fragement fills in the approriate section of the table. There are several pre built components foreach of these render fragments that can be used.
            </p>
            <p>
                Each of these sub components communicate with the <code>RfDataGrid</code> via <code>DataGridContext</code> which the <code>RfDataGrid</code>
                creates and passes down via a <code>CascadingParameter</code>.
            </p>

            <h3>Headers</h3>
            <p>
                The render fragment <code>Headers</code> is where each columns <code>th</code> elements should go.
                As an option, if sorting isn't required, you could remove the creation of additional sub components by just writing the standard
                elements within <code>Headers</code>.
            </p>
                <pre><code><xmp>//Example Headers
<th>Column 1</th>
<th>Column 2</th>
<th>Column 3</th>
<th>Column 4</th>
<th>Column n</th>
</xmp></code></pre> 

            <h5>Available Sub Components</h5>
            <table>
                <thead>
                    <tr>
                        <th>Component</th>
                        <th>Purpose</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>RfDgHeader</code></td>
                        <td>Wraps a <code>th</code> providing support for sorting columns.</td>
                    </tr>
                </tbody>
            </table>

            <h3>Filters</h3>
            <p>
                <code>Filters</code> render fragment is an optional location to add filters for the DataGrid. They are included in the <code>thead</code>
                underneath the <code>Headers</code>. There are several prebuilt filters that can be used or if a custom one is required look to <code>RfDgFilterInput</code> base class
                for an example of a filter. 

            </p>
            <p>
                However, this class is not required. To make the filter work correctly you will need to have a <code>DataGridContext</code>
                parameter and properly call <code>DataGridContext.OnFilterChanged</code>.
            </p>
            <h5>Available Sub Components</h5>
            <table>
                <thead>
                    <tr>
                        <th>Component</th>
                        <th>Purpose</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code></code></td>
                        <td></td>
                    </tr>
                </tbody>
            </table>



        </div>

    </BasicUsage>


</ComponentDetail>

@code {

}
