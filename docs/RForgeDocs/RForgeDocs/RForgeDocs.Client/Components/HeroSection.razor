@using RForgeBlazor.Services
@using RForgeDocs.Abstractions

<section class="hero is-dark @heroCssClass">

    @if (HeroHead != null)
    {
        <div class="hero-head">
            @HeroHead
        </div>
    }

    <div class="container @ContainerCssClass">
        <div class="hero-body">
            @if (HeroBody == null)
            {
                <h1 class="title @titleCssClass">@Title</h1>
                @if (string.IsNullOrWhiteSpace(SubTitle) == false)
                {
                    <p class="subtitle">@SubTitle</p>
                }
            }
            else
            {
                @HeroBody
            }
        </div>
    </div>

    @if (HeroFooter != null)
    {
        <div class="hero-footer">
            @HeroFooter
        </div>
    }

</section>

@code {

    [Parameter]
    public string Title { get; set; }
    [Parameter]
    public string SubTitle { get; set; }

    [Parameter]
    public string HeroCss { get; set; }

    [Parameter]
    public bool SpaceTitle { get; set; }
    [Parameter]
    public string TitleCss { get; set; }

    [Parameter]
    public string ContainerCssClass { get; set; }

    [Parameter]
    public HeroSectionSize Size { get; set; } = HeroSectionSize.Default;

    [Parameter]
    public RenderFragment HeroBody { get; set; }

    [Parameter]
    public RenderFragment HeroFooter { get; set; }

    [Parameter]
    public RenderFragment HeroHead { get; set; }

    private string heroCssClass
    {
        get
        {
            string css = "";
            switch (Size)
            {
                case HeroSectionSize.Small:
                    css = "is-small";
                    break;
                case HeroSectionSize.Medium:
                    css = "is-medium";
                    break;
                case HeroSectionSize.Large:
                    css = "is-large";
                    break;
                case HeroSectionSize.HalfHeight:
                    css = "is-halfheight";
                    break;
                case HeroSectionSize.FullHeight:
                    css = "is-fullheight";
                    break;
            }

            if (string.IsNullOrWhiteSpace(HeroCss) == false)
                css += $" {HeroCss}";

            return css;
        }

    }

    private string titleCssClass
    {
        get
        {
            string css = null;

            CssHelper.AddIfTrue(ref css, SpaceTitle == true, "is-spaced");

            if (string.IsNullOrEmpty(TitleCss) == true)
                css += " is-size-2";
            else
                css += $" {TitleCss}";

            return css;
        }
    }

}
