name: Publish RForge Final Release 

on:
  release:
    types:
      - published
  # Allows for running manually from Actions tab
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to package and release'
        required: true
defaults:
  run:
    working-directory: src/RForge

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: write
      actions: write
      attestations: write

    steps:
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 0
          ref: ${{ github.event_name == 'workflow_dispatch' && inputs.tag || github.ref }}
    
      # Setup Env
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.x
            9.x

      - name: Build with dotnet
        run: dotnet build --configuration Release
      
      - name: Set up GitHub Nuget Repository
        run: dotnet nuget add source --username USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/Rumhyek/index.json"
                
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.0.0
        with:
          versionSpec: '6.0.x'

        # Determine the next version. (rc is removed due to release tag)
      - name: Run GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.0.0
      
      - name: Echo GitVersion output
        run: |
          echo "GitVersion.SemVer: ${{ steps.gitversion.outputs.SemVer }}"
          echo "GitHub tag: ${{ github.event.release.tag_name }}"
          
       # Pack all packages at the given version
      - name: Package Pack
        run: dotnet pack --output ${{env.DOTNET_ROOT}}/artifacts --configuration Release -p:Version=${{ steps.gitversion.outputs.SemVer }}
          
      # Publish the packages to github under RForge
      - name: Publish Packages to GitHub
        run: dotnet nuget push ${{env.DOTNET_ROOT}}/artifacts/*.nupkg --source github --skip-duplicate
      
      # Publish the packages to nuget under RForge
      - name: Publish Packages (Nuget)
        run: dotnet nuget push ${{env.DOTNET_ROOT}}/artifacts/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_TOKEN }} --skip-duplicate
