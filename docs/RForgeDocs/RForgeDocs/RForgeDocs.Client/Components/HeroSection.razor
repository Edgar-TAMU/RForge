@using RForgeDocs.Abstractions

<section class="hero is-dark @heroCssClass">

    @if (HeroHead != null)
    {
        <div class="hero-head">
            @HeroHead
        </div>
    }

    <div class="container @ContainerCssClass">
        <div class="hero-body">
            <h1 class="title is-size-2 @titleCssClass">@Title</h1>
            @if (string.IsNullOrWhiteSpace(SubTitle) == false)
            {
                <p class="subtitle">@SubTitle</p>
            }
        </div>
    </div>
    @if(HeroFooter != null)
    {
        <div class="hero-footer">
            @HeroFooter
        </div>    
    }
    
</section>

@code {

    [Parameter]
    public string Title { get; set; }
    [Parameter]
    public string SubTitle { get; set; }

    [Parameter]
    public bool SpaceTitle { get; set; }

    [Parameter]
    public string ContainerCssClass { get; set; }

    [Parameter]
    public HeroSectionSize Size { get; set; } = HeroSectionSize.Default;

    [Parameter]
    public RenderFragment HeroFooter { get; set; }

    [Parameter]
    public RenderFragment HeroHead { get; set; }

    private string heroCssClass
    {
        get
        {
            switch (Size)
            {
                case HeroSectionSize.Small: return "is-small";
                case HeroSectionSize.Medium: return "is-medium";
                case HeroSectionSize.Large: return "is-large";
                case HeroSectionSize.HalfHeight: return "is-halfheight";
                case HeroSectionSize.FullHeight: return "is-fullheight";
            }

            return null;
        }

    }

    private string titleCssClass
    {
        get
        {
            if (SpaceTitle == true)
                return "is-spaced";

            return null;
        }
    }

}
