@page "/dropdown"
@using RForge.Abstractions.DropDowns

@inject IGetFakeUsers getFakeUsers
@rendermode InteractiveAuto

<h3>DropDownPage</h3>

<div class="columns">

    <div class="column">
        <RfDropDown TItem="UserRowData"
                    OnLoad="OnLoad"
                    ItemComparer="(a, b) => a.Id == b.Id"
                    @bind-SelectedItem="SelectedItem1"
                    CloseOnSelect="true"
                    FilterPlaceholderText="First Name"
                    FilterIcon=""
                    Items=Items>

            <img src="https://placehold.co/5x5/" />
            <strong>@context.FirstName</strong> @context.LastName
        </RfDropDown>
    </div>

    <div class="column">
        <RfDropDown TItem="UserRowData"
                    @bind-SelectedItem="SelectedItem2"
                    OnLoad="OnLoad"
                    Items=Items>

            @context.LastName - @context.Email

        </RfDropDown>
    </div>

    <div class="column">
        <RfDropDown TItem="UserRowData"
                    @bind-SelectedItem="SelectedItem3"
                    OnLoad="OnLoad"
                    Items=Items>
            <RowItemTemplate>
                <div>
                    @context.FirstName @context.LastName
                </div>
                <div class="is-italic is-size-7">
                    @context.Email
                </div>
            </RowItemTemplate>
            <SelectedItemTemplate>
                <span title="@context.Email">@context.FirstName @context.LastName.FirstOrDefault()</span>
            </SelectedItemTemplate>
        </RfDropDown>
    </div>

</div>

<div>
    <RfDropDown TItem="UserRowData"
                Items="Items"
                @bind-SelectedItem="SelectedItem4"
                OnLoad="OnLoad">
        @context.Id - @context.FirstName <a href="https://google.com">Go away</a>
    </RfDropDown>
</div>

<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />

<div class="fixed-grid has-2-cols">
    <div class="grid">
        <div class="cell has-text-right">
            <RfDropDown TItem="UserRowData"
                        PlaceholderText="@RfDropDownPosition.RightUp.ToString()"
                        Position="RfDropDownPosition.RightUp"
                        OnLoad="OnLoad">
                @context.FirstName (Right Up)
            </RfDropDown>
        </div>
        <div class="cell  is-half">
            <RfDropDown TItem="UserRowData"
                        PlaceholderText="@RfDropDownPosition.LeftUp.ToString()"
                        Position="RfDropDownPosition.LeftUp"
                        OnLoad="OnLoad">
                @context.FirstName (Left Up)
            </RfDropDown>
        </div>
        <div class="cell has-text-right">
            <RfDropDown TItem="UserRowData"
                        PlaceholderText="@RfDropDownPosition.RightDown.ToString()"
                        Position="RfDropDownPosition.RightDown"
                        OnLoad="OnLoad">
                @context.FirstName (Right Down)
            </RfDropDown>
        </div>
        <div class="cell is-half">
            <RfDropDown TItem="UserRowData"
                        PlaceholderText="@RfDropDownPosition.LeftDown.ToString()"
                        Position="RfDropDownPosition.LeftDown"
                        OnLoad="OnLoad">
                @context.FirstName (Left Down)
            </RfDropDown>
        </div>
    </div>
</div>


@code {

    public UserRowData SelectedItem1 { get; set; }
    public UserRowData SelectedItem2 { get; set; }
    public UserRowData SelectedItem3 { get; set; }
    public UserRowData SelectedItem4 { get; set; }
    public List<UserRowData> Items { get; set; }

    public async Task OnLoad(string filter)
    {
        var users = getFakeUsers.Get();

        if (string.IsNullOrWhiteSpace(filter) == false)
            users = users.Where(u => u.FirstName.Contains(filter));

        await Task.Delay(100);

        Items = users.ToList();
        StateHasChanged();
    }

}
