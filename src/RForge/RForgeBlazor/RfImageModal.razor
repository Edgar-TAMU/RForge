@inherits RfModalBase

@using RForgeBlazor.Services

<div class="modal @modalCss" style="@modalStyles">
    <div class="modal-background"></div>
    <div class="modal-content @modalContentCss">
        <div class="image" style="@imageContainerStyles">
            <img src="@ImageUrl" title="@ImageCaption" />
        </div>
        @if (string.IsNullOrWhiteSpace(ImageCaption) == false)
        {
            <div class="has-text-centered is-italic block mt-1 is-size-5">
                @ImageCaption
            </div>
        }
    </div>
    @if(ShowCloseButton == true)
    {
        <button class="modal-close is-large" aria-label="close" @onclick="OnCloseClick"></button>
    }
</div>


@code {

    [Parameter]
    public string ImageCss { get; set; }

    [Parameter]
    public AspectRatio? ImageRatio { get; set; }
    [Parameter]
    public string ImageCaption { get; set; }


    [Parameter]
    public string ImageUrl { get; set; }

    private string imageContainerStyles
    {
        get
        {
            if (IsVisible == false) return null;

            string styles = null;
            CssHelper.AddIfTrue(ref styles, ImageRatio != null, () => $"aspect-ratio: {ImageRatio.Value.Width} / {ImageRatio.Value.Height};");

            return styles;
        }
    }

    private async Task OnCloseClick()
    {
        await IsVisibleChanged.InvokeAsync(false);
    }
}