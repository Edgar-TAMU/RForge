# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Create and Publish new RForge Package

on:
  # Runs on pushes targeting the `main` branch
  # when docs/** is updated
  push:
    branches: [main]
    paths:
      - 'src/**'
  # Allows for running manually from Actions tab
  workflow_dispatch:
  
# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: blazor-rforge
  cancel-in-progress: false

defaults:
  run:
    working-directory: src/RForge

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read
      actions: write
      attestations: write

    steps:
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 0
    
      # Setup Env
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Build with dotnet
        run: dotnet build --configuration Release
        
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.0.0
        with:
          versionSpec: '6.x'
      
      - name: Set up GitHub Nuget Repository
        run: dotnet nuget add source --username USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github 

      # Determine the version
      - id: version
        name: Determine Version
        uses: gittools/actions/gitversion/execute@v3.0.0
        
      # Pack all packages at the given version
      - name: Package Pack
        run: dotnet pack --output /artifacts --configuration Release -p:Version=${{ steps.version.outputs.fullSemVer }}
      
      # Publish the packages to github under RForge
      - name: Publish Packages
        run: dotnet nuget push /artifacts/*.nupkg --source github
