@page "/data-grid/example/minimum-example"

@using RForge.Abstractions
@using RForgeDocs.Abstractions
@using RForgeDocs.Abstractions.DataModels
@using RForgeDocs.Abstractions.Services

@inject IUserDataGridPageProcessor userDataGridPageProcessor

@rendermode InteractiveAuto

<ExampleDetail Title="Minimal Example"
               SubTitle="Data Grid"
               ComponentName="Data Grid"
               PageSourceUrl="@RForgeHelpers.RepoDocsUrl("/RForgeDocs.Client/Pages/Examples/DataGrid/MinimumExamplePage.razor")"
               ComponentDetailsUrl="/data-grid/details" />

<div class="columns">
    <div class="column is-4">
        <article class="section">
            <div class="box">
                <div class="content">
                    <p>
                        This example is a usecase of a near raw html table. It still provides the option to improve upon the functionality as needed.
                    </p>

                    <h5>Headers</h5>
                    <p>
                        As with cells, filters, etc. <code>RfDgHeader</code> can be replaced with a simple <code>th</code> element.
                    </p>

                    <h5>Sorting</h5>
                    <p>
                        Sorting is assumed by default so on <code>RfDgHeader</code> the parameter
                        <code>AllowSorting</code> must be set to false otherwise the component will require <code>SortKey</code>.
                    </p>

                    <h5>Filtering</h5>
                    <p>
                        Filtering is done outside of the <code>RfDataGrid</code>. However the data grid can turn off filtering
                        via <code>RfDataGrid.AllowFilters = false</code>.
                    </p>
                    <p>
                        To render a column with no filter use either <code>RfDgFilterNone</code> or just create an empty <code>th</code>.
                    </p>

                    <h5>Pagination</h5>
                    <p>
                        Pagination is off by default. To add pagination set <code>RfDataGrid.PageSize</code> to something greater than 0.
                    </p>

                    <h5>Total Count</h5>
                    <p>
                        Regardless of pagination, <code>TotalCount</code> is still shown. Make sure to set it when setting the data.
                    </p>
                </div>
            </div>
        </article>
    </div>
    <div class="column">
        <article class="section">

            <RfDataGrid TRowData="UserData"
                        Data=Data
                        TotalCount=TotalCount
                        OnLoadData=OnLoad>

                <Headers>

                    <th>Id</th>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Is Admin</th>

                </Headers>


                <Cells>
                    <td>@context.Id</td>
                    <td>@context.FirstName</td>
                    <td>@context.LastName</td>
                    <td>@context.IsAdmin</td>
                </Cells>

            </RfDataGrid>

        </article>
    </div>
</div>

@code {

    private List<UserData> Data { get; set; }

    private int TotalCount
    {
        get
        {
            if (Data == null) return 0;

            return Data.Count;
        }
    }

    public async Task OnLoad()
    {
        Data = await userDataGridPageProcessor.GetAll();
        StateHasChanged();
    }
}
